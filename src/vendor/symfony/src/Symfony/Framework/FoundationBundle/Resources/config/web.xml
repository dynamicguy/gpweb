<?xml version="1.0" ?>

<container xmlns="http://www.symfony-project.org/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.symfony-project.org/schema/dic/services http://www.symfony-project.org/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="request_parser.class">Symfony\Framework\FoundationBundle\Listener\RequestParser</parameter>
        <parameter key="controller_manager.class">Symfony\Framework\FoundationBundle\Controller\ControllerManager</parameter>
        <parameter key="controller_loader.class">Symfony\Framework\FoundationBundle\Listener\ControllerLoader</parameter>
        <parameter key="router.class">Symfony\Components\Routing\Router</parameter>
        <parameter key="response_filter.class">Symfony\Components\HttpKernel\Listener\ResponseFilter</parameter>
        <parameter key="exception_handler.class">Symfony\Framework\FoundationBundle\Listener\ExceptionHandler</parameter>
        <parameter key="exception_handler.controller">FoundationBundle:Exception:exception</parameter>
        <parameter key="esi.class">Symfony\Components\HttpKernel\Cache\Esi</parameter>
        <parameter key="esi_filter.class">Symfony\Components\HttpKernel\Listener\EsiFilter</parameter>
    </parameters>

    <services>
        <service id="controller_manager" class="%controller_manager.class%">
            <argument type="service" id="service_container" />
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>

        <service id="controller_loader" class="%controller_loader.class%">
            <annotation name="kernel.listener" />
            <argument type="service" id="controller_manager" />
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>

        <service id="request_parser" class="%request_parser.class%">
            <annotation name="kernel.listener" />
            <argument type="service" id="service_container" />
            <argument type="service" id="router" />
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>

        <service id="router" class="%router.class%">
            <argument type="collection">
                <argument type="service" id="kernel" />
                <argument>registerRoutes</argument>
            </argument>
            <argument type="collection">
                <argument key="cache_dir">%kernel.cache_dir%</argument>
                <argument key="debug">%kernel.debug%</argument>
                <argument key="matcher_cache_class">%kernel.name%UrlMatcher</argument>
                <argument key="generator_cache_class">%kernel.name%UrlGenerator</argument>
            </argument>
        </service>

        <service id="esi" class="%esi.class%" />

        <service id="esi_filter" class="%esi_filter.class%">
          <annotation name="kernel.listener" />
          <argument type="service" id="esi" on-invalid="ignore" />
        </service>

        <service id="response_filter" class="%response_filter.class%">
            <annotation name="kernel.listener" />
        </service>

        <service id="exception_handler" class="%exception_handler.class%">
            <annotation name="kernel.listener" />
            <argument type="service" id="service_container" />
            <argument type="service" id="logger" on-invalid="null" />
            <argument>%exception_handler.controller%</argument>
        </service>
    </services>
</container>
